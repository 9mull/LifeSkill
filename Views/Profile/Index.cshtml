@model ProfileViewModel

@{
    ViewData["Title"] = "Профиль";
}

<div class="container mx-auto max-w-7xl px-4 py-8">
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="mb-4 bg-emerald-100 border-l-4 border-emerald-500 p-4 fixed top-4 right-4 rounded shadow-lg">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-emerald-500" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-emerald-700">@TempData["SuccessMessage"]</p>
                </div>
            </div>
        </div>

        <script>
            setTimeout(function() {
                var element = document.getElementById('successMessage');
                element.style.transition = 'opacity 0.5s ease-in-out';
                element.style.opacity = '0';
                setTimeout(function() {
                    element.remove();
                }, 500);
            }, 3000);
        </script>
    }

    @if (TempData["StatusMessage"] != null)
    {
        <div class="mb-6 bg-emerald-50 border-l-4 border-emerald-400 p-4 rounded">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-emerald-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-emerald-700">@TempData["StatusMessage"]</p>
                </div>
            </div>
        </div>
    }

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <div class="lg:col-span-1">
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Личные данные</h2>
                
                <form asp-action="UpdateProfile" method="post" enctype="multipart/form-data" class="space-y-6">
                    <div class="flex flex-col items-center">
                        <div class="w-48 h-48 relative mb-4">
                            <div id="profilePhotoEmpty" class="w-full h-full rounded-full bg-gray-100 border-4 border-emerald-100 flex items-center justify-center" style="display:@(string.IsNullOrEmpty(Model.CurrentProfilePicture) ? "" : "none");">
                                <div class="h-full w-full bg-gray-100 flex items-center justify-center rounded-full">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-16 h-16 text-gray-400">
                                      <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
                                    </svg>
                                </div>
                            </div>
                            <img id="profilePreview"
                                 class="w-full h-full rounded-full object-cover border-4 border-emerald-100"
                                 src="@(Model.CurrentProfilePicture ?? "/images/default-avatar.svg")" alt="Фото профиля"
                                 style="@(string.IsNullOrEmpty(Model.CurrentProfilePicture) ? "display:none;" : "")">
                            @if (!string.IsNullOrEmpty(Model.CurrentProfilePicture))
                            {
                                <button type="button" id="removePhotoBtn" class="absolute top-2 right-2 bg-red-500 hover:bg-red-600 text-white rounded-full p-1 shadow transition" title="Удалить фото" onclick="removeProfilePhoto(event)">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                                <input type="hidden" id="RemovePhoto" name="RemovePhoto" value="false" />
                            }
                        </div>
                        <div class="w-full text-center">
                            <div class="relative inline-block">
                                <button type="button" class="relative px-4 py-2 rounded-full bg-emerald-50 text-emerald-700 text-sm font-semibold hover:bg-emerald-100 transition-colors duration-300 overflow-hidden cursor-pointer">
                                    Изменить фото
                                    <input asp-for="ProfilePicture" type="file" accept=".jpg,.jpeg,.png"
                                           class="absolute inset-0 w-full h-full opacity-0 cursor-pointer"
                                           onchange="onProfilePicChange(event)" />
                                </button>
                                <p class="mt-2 text-xs text-gray-500 selected-file-name" id="selectedFileName">Файл не выбран</p>
                            </div>
                            <span asp-validation-for="ProfilePicture" class="text-red-500 text-sm"></span>
                            <p class="mt-2 text-xs text-gray-500">PNG, JPG или JPEG (макс. 5MB)</p>
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                        <p class="text-gray-900 bg-gray-50 px-3 py-2 rounded">@Model.Email</p>
                    </div>

                    <div>
                        <label asp-for="FirstName" class="block text-sm font-medium text-gray-700 mb-1">Имя</label>
                        <input asp-for="FirstName" class="w-full px-3 py-2 border border-gray-300 rounded focus:ring-emerald-500 focus:border-emerald-500" />
                        <span asp-validation-for="FirstName" class="text-red-500 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="LastName" class="block text-sm font-medium text-gray-700 mb-1">Фамилия</label>
                        <input asp-for="LastName" class="w-full px-3 py-2 border border-gray-300 rounded focus:ring-emerald-500 focus:border-emerald-500" />
                        <span asp-validation-for="LastName" class="text-red-500 text-sm"></span>
                    </div>

                    <button type="submit" class="w-full inline-flex justify-center items-center px-4 py-2 mb-2 bg-emerald-600 text-white rounded hover:bg-emerald-700 transition-colors duration-300">
                        Сохранить изменения
                    </button>
                </form>
            </div>
        </div>

        <div class="lg:col-span-2 space-y-8">
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h2 class="text-2xl font-bold text-gray-900 mb-4">Прогресс обучения</h2>
                <div class="flex justify-between mb-2">
                    <span class="text-base font-medium text-emerald-700">Общий прогресс</span>
                    <span class="text-sm font-medium text-emerald-700">@Model.CompletedCourses из @Model.TotalCourses курсов</span>
                </div>
                <div class="w-full bg-gray-100 rounded-full h-3">
                    <div class="bg-emerald-600 h-3 rounded-full transition-all duration-300" style="width: @(Model.CompletedCourses * 100 / Model.TotalCourses)%"></div>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow-lg p-6">
                <div class="flex items-center justify-between mb-6">
                    <div>
                        <h2 class="text-2xl font-bold text-gray-900">Прогресс по курсам</h2>
                    </div>
                    <div class="flex space-x-2">
                        <button type="button" class="courses-prev p-2 rounded-full bg-gray-50 border border-gray-200 hover:bg-gray-100 transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Назад">
                            <svg class="w-5 h-5 text-gray-600 prev-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                        </button>
                        <button type="button" class="courses-next p-2 rounded-full bg-gray-50 border border-gray-200 hover:bg-gray-100 transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed" aria-label="Вперёд">
                            <svg class="w-5 h-5 text-gray-600 next-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                        </button>
                    </div>
                </div>
                <div class="courses-slider relative -mx-6 px-6 overflow-hidden min-h-[455px]">
                    <div class="swiper-container w-full">
                        <div class="swiper-wrapper">
                            @foreach (var course in Model.CourseProgresses)
                            {
                                <div class="swiper-slide">
                                    <div class="bg-white rounded-lg shadow hover:shadow-md transition-all duration-300 h-[420px] flex flex-col mt-1">
                                        <div class="h-48 rounded-t-lg overflow-hidden">
                                            @if (!string.IsNullOrEmpty(course.ImageUrl))
                                            {
                                                <img src="@course.ImageUrl" 
                                                     alt="@course.CourseName" 
                                                     class="w-full h-full object-cover opacity-90 group-hover:opacity-100 transition-opacity duration-300">
                                            }
                                            else
                                            {
                                                <div class="h-full w-full bg-gray-100 flex items-center justify-center">
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-16 h-16 text-gray-400">
                                                      <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
                                                    </svg>
                                                </div>
                                            }
                                        </div>
                                        <div class="flex-1 flex flex-col p-4">
                                            <h3 class="text-lg font-semibold text-gray-900 line-clamp-2 mb-4 min-h-[48px] max-h-[55px] overflow-hidden">@course.CourseName</h3>
                                            <div class="mt-auto space-y-4">
                                                <div>
                                                    <div class="flex justify-between mb-1">
                                                        <span class="text-sm font-medium text-gray-500">Прогресс</span>
                                                        <span class="text-sm font-medium text-gray-500">@course.CompletedLessons из @course.TotalLessons уроков</span>
                                                    </div>
                                                    <div class="w-full bg-gray-100 rounded-full h-2">
                                                        <div class="bg-emerald-600 h-2 rounded-full transition-all duration-300" style="width: @(course.CompletedLessons * 100 / course.TotalLessons)%"></div>
                                                    </div>
                                                </div>
                                                <a href="@Url.Action("Details", "Courses", new { id = course.CourseId })" 
                                                   class="group inline-flex items-center justify-center w-full px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors duration-300 hover:shadow-lg">
                                                    Перейти к курсу
                                                    <svg class="w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                                    </svg>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
    <script>
        function onProfilePicChange(e) {
            const file = e.target.files[0];
            const fileNameElement = document.getElementById('selectedFileName');
            if (file) {
                fileNameElement.textContent = file.name;
                const reader = new FileReader();
                reader.onload = function(ev) {
                    document.getElementById('profilePreview').src = ev.target.result;
                    document.getElementById('profilePreview').style.display = '';
                    document.getElementById('profilePhotoEmpty').style.display = 'none';
                    const removeInput = document.getElementById('RemovePhoto');
                    if (removeInput) removeInput.value = 'false';
                };
                reader.readAsDataURL(file);
            } else {
                fileNameElement.textContent = 'Файл не выбран';
            }
        }
        function removeProfilePhoto(e) {
            e.preventDefault();
            document.getElementById('profilePreview').style.display = 'none';
            document.getElementById('profilePhotoEmpty').style.display = '';
            document.getElementById('RemovePhoto').value = 'true';
            document.getElementById('removePhotoBtn').style.display = 'none';
        }

        const swiper = new Swiper('.swiper-container', {
            slidesPerView: 2,
            spaceBetween: 24,
            navigation: {
                nextEl: '.courses-next',
                prevEl: '.courses-prev',
            },
            breakpoints: {
                640: {
                    slidesPerView: 2,
                },
                1280: {
                    slidesPerView: 2,
                }
            }
        });

        function updateSliderArrows() {
            const prevBtn = document.querySelector('.courses-prev');
            const nextBtn = document.querySelector('.courses-next');
            const prevSvg = prevBtn.querySelector('svg');
            const nextSvg = nextBtn.querySelector('svg');
            if (swiper.isBeginning) {
                prevBtn.disabled = true;
                prevSvg.classList.add('text-gray-300');
                prevSvg.classList.remove('text-gray-600');
            } else {
                prevBtn.disabled = false;
                prevSvg.classList.remove('text-gray-300');
                prevSvg.classList.add('text-gray-600');
            }
            if (swiper.isEnd) {
                nextBtn.disabled = true;
                nextSvg.classList.add('text-gray-300');
                nextSvg.classList.remove('text-gray-600');
            } else {
                nextBtn.disabled = false;
                nextSvg.classList.remove('text-gray-300');
                nextSvg.classList.add('text-gray-600');
            }
        }
        swiper.on('slideChange', updateSliderArrows);
        swiper.on('reachEnd', updateSliderArrows);
        swiper.on('reachBeginning', updateSliderArrows);
        updateSliderArrows();
    </script>
} 