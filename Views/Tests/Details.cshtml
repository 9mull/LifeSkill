@model LifeSkill.Web.Models.Course

@{
    ViewData["Title"] = Model.Title;
    var isAuthorized = User.Identity?.IsAuthenticated ?? false;
}

<div class="container mx-auto max-w-7xl px-4 py-8">
    <div class="mb-8">
        <a href="@Url.Action("Index")" class="inline-flex items-center text-emerald-600 hover:text-emerald-700">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Назад к тестам
        </a>
    </div>

    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="p-8">
            <h1 class="text-3xl font-bold mb-4">@Model.Title</h1>
            
            <div class="space-y-6">
                <h2 class="text-2xl font-semibold">Список тестов</h2>
                
                <div class="space-y-4">
                    @foreach (var lesson in Model.Lessons)
                    {
                        <div class="flex items-center p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors duration-300">
                            <div class="flex-1">
                                <h3 class="text-lg font-medium">@lesson.Title</h3>
                                <div class="flex items-center space-x-6 mt-2 text-sm text-gray-500">
                                    <span>Вопросов: <span class="font-semibold text-gray-700">@(@lesson.TestQuestions?.Count ?? 0)</span></span>
                                    <span>Проходной балл: <span class="font-semibold text-gray-700">@((int)Math.Ceiling(0.8 * (lesson.TestQuestions?.Count ?? 0)))/@(@lesson.TestQuestions?.Count ?? 0)</span></span>
                                </div>
                            </div>
                            @if (ViewBag.PassedLessons != null && ((HashSet<int>)ViewBag.PassedLessons).Contains(lesson.Id))
                            {
                                <span class="mr-4 px-3 py-1 bg-emerald-100 text-emerald-700 rounded-full font-semibold flex items-center">
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" /></svg>
                                    Пройден
                                </span>
                            }
                            @if (isAuthorized)
                            {
                                <a href="@Url.Action("Start", "TestPassing", new { lessonId = lesson.Id })" class="ml-4 px-4 py-2 bg-emerald-600 text-white rounded hover:bg-emerald-700 transition-colors duration-300">
                                    Пройти тест
                                </a>
                            }
                            else
                            {
                                <button onclick="showAuthModal()" class="ml-4 px-4 py-2 bg-emerald-600 text-white rounded hover:bg-emerald-700 transition-colors duration-300">
                                    Пройти тест
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div id="authModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center">
    <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4 relative">
        <button onclick="closeAuthModal()" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors duration-300">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
        </button>
        <div class="text-center">
            <svg class="w-16 h-16 text-emerald-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
            <h3 class="text-xl font-bold mb-2">Требуется авторизация</h3>
            <p class="text-gray-600 mb-6">Для прохождения теста необходимо войти в систему.</p>
            <div class="space-y-3">
                <a href="@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })" class="block w-full px-4 py-2 bg-emerald-600 text-white rounded hover:bg-emerald-700 transition-colors duration-300">
                    Войти
                </a>
                <a href="@Url.Action("Register", "Account", new { returnUrl = Context.Request.Path })" class="block w-full px-4 py-2 bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition-colors duration-300">
                    Зарегистрироваться
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showAuthModal() {
            document.getElementById('authModal').classList.remove('hidden');
            document.getElementById('authModal').classList.add('flex');
        }

        function closeAuthModal() {
            document.getElementById('authModal').classList.add('hidden');
            document.getElementById('authModal').classList.remove('flex');
        }

        document.getElementById('authModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeAuthModal();
            }
        });
    </script>
} 